      REAL*8 FUNCTION SUDB_VMMUEMEPG(P1, P2, P3, P4, P5, P6, P7)
C  
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P1,P2,P3,P4,...
C  
C FOR PROCESS : u d~  -> vm mu+ e- e+ g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NEXTERNAL,   NCOMB                     
      PARAMETER (NEXTERNAL=7, NCOMB=128)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3),P2(0:3),P3(0:3),P4(0:3),P5(0:3),P6(0:3),P7(0:3)             
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY                                         
      REAL*8 T
      REAL*8 UDB_VMMUEMEPG                                                       
      INTEGER IHEL
      LOGICAL GOODHEL(NCOMB)
      DATA GOODHEL/NCOMB*.FALSE./
      DATA NTRY/0/
      DATA (NHEL(IHEL,  1),IHEL=1,7) / -1, -1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL,  2),IHEL=1,7) / -1, -1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL,  3),IHEL=1,7) / -1, -1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL,  4),IHEL=1,7) / -1, -1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL,  5),IHEL=1,7) / -1, -1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL,  6),IHEL=1,7) / -1, -1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL,  7),IHEL=1,7) / -1, -1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL,  8),IHEL=1,7) / -1, -1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL,  9),IHEL=1,7) / -1, -1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 10),IHEL=1,7) / -1, -1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 11),IHEL=1,7) / -1, -1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 12),IHEL=1,7) / -1, -1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 13),IHEL=1,7) / -1, -1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 14),IHEL=1,7) / -1, -1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 15),IHEL=1,7) / -1, -1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 16),IHEL=1,7) / -1, -1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 17),IHEL=1,7) / -1, -1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 18),IHEL=1,7) / -1, -1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 19),IHEL=1,7) / -1, -1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 20),IHEL=1,7) / -1, -1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 21),IHEL=1,7) / -1, -1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 22),IHEL=1,7) / -1, -1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 23),IHEL=1,7) / -1, -1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 24),IHEL=1,7) / -1, -1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 25),IHEL=1,7) / -1, -1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 26),IHEL=1,7) / -1, -1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 27),IHEL=1,7) / -1, -1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 28),IHEL=1,7) / -1, -1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 29),IHEL=1,7) / -1, -1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 30),IHEL=1,7) / -1, -1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 31),IHEL=1,7) / -1, -1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 32),IHEL=1,7) / -1, -1,  1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 33),IHEL=1,7) / -1,  1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 34),IHEL=1,7) / -1,  1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 35),IHEL=1,7) / -1,  1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 36),IHEL=1,7) / -1,  1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 37),IHEL=1,7) / -1,  1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 38),IHEL=1,7) / -1,  1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 39),IHEL=1,7) / -1,  1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 40),IHEL=1,7) / -1,  1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 41),IHEL=1,7) / -1,  1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 42),IHEL=1,7) / -1,  1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 43),IHEL=1,7) / -1,  1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 44),IHEL=1,7) / -1,  1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 45),IHEL=1,7) / -1,  1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 46),IHEL=1,7) / -1,  1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 47),IHEL=1,7) / -1,  1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 48),IHEL=1,7) / -1,  1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 49),IHEL=1,7) / -1,  1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 50),IHEL=1,7) / -1,  1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 51),IHEL=1,7) / -1,  1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 52),IHEL=1,7) / -1,  1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 53),IHEL=1,7) / -1,  1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 54),IHEL=1,7) / -1,  1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 55),IHEL=1,7) / -1,  1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 56),IHEL=1,7) / -1,  1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 57),IHEL=1,7) / -1,  1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 58),IHEL=1,7) / -1,  1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 59),IHEL=1,7) / -1,  1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 60),IHEL=1,7) / -1,  1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 61),IHEL=1,7) / -1,  1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 62),IHEL=1,7) / -1,  1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 63),IHEL=1,7) / -1,  1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 64),IHEL=1,7) / -1,  1,  1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 65),IHEL=1,7) /  1, -1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 66),IHEL=1,7) /  1, -1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 67),IHEL=1,7) /  1, -1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 68),IHEL=1,7) /  1, -1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 69),IHEL=1,7) /  1, -1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 70),IHEL=1,7) /  1, -1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 71),IHEL=1,7) /  1, -1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 72),IHEL=1,7) /  1, -1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 73),IHEL=1,7) /  1, -1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 74),IHEL=1,7) /  1, -1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 75),IHEL=1,7) /  1, -1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 76),IHEL=1,7) /  1, -1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 77),IHEL=1,7) /  1, -1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 78),IHEL=1,7) /  1, -1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 79),IHEL=1,7) /  1, -1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 80),IHEL=1,7) /  1, -1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 81),IHEL=1,7) /  1, -1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 82),IHEL=1,7) /  1, -1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 83),IHEL=1,7) /  1, -1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 84),IHEL=1,7) /  1, -1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 85),IHEL=1,7) /  1, -1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 86),IHEL=1,7) /  1, -1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 87),IHEL=1,7) /  1, -1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 88),IHEL=1,7) /  1, -1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 89),IHEL=1,7) /  1, -1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 90),IHEL=1,7) /  1, -1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 91),IHEL=1,7) /  1, -1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 92),IHEL=1,7) /  1, -1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 93),IHEL=1,7) /  1, -1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 94),IHEL=1,7) /  1, -1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 95),IHEL=1,7) /  1, -1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 96),IHEL=1,7) /  1, -1,  1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 97),IHEL=1,7) /  1,  1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 98),IHEL=1,7) /  1,  1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 99),IHEL=1,7) /  1,  1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL,100),IHEL=1,7) /  1,  1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL,101),IHEL=1,7) /  1,  1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL,102),IHEL=1,7) /  1,  1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL,103),IHEL=1,7) /  1,  1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL,104),IHEL=1,7) /  1,  1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL,105),IHEL=1,7) /  1,  1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL,106),IHEL=1,7) /  1,  1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL,107),IHEL=1,7) /  1,  1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL,108),IHEL=1,7) /  1,  1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL,109),IHEL=1,7) /  1,  1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL,110),IHEL=1,7) /  1,  1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL,111),IHEL=1,7) /  1,  1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL,112),IHEL=1,7) /  1,  1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL,113),IHEL=1,7) /  1,  1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL,114),IHEL=1,7) /  1,  1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL,115),IHEL=1,7) /  1,  1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL,116),IHEL=1,7) /  1,  1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL,117),IHEL=1,7) /  1,  1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL,118),IHEL=1,7) /  1,  1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL,119),IHEL=1,7) /  1,  1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL,120),IHEL=1,7) /  1,  1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL,121),IHEL=1,7) /  1,  1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL,122),IHEL=1,7) /  1,  1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL,123),IHEL=1,7) /  1,  1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL,124),IHEL=1,7) /  1,  1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL,125),IHEL=1,7) /  1,  1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL,126),IHEL=1,7) /  1,  1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL,127),IHEL=1,7) /  1,  1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL,128),IHEL=1,7) /  1,  1,  1,  1,  1,  1,  1/
C ----------
C BEGIN CODE
C ----------
      SUDB_VMMUEMEPG = 0d0
      NTRY=NTRY+1
      DO IHEL=1,NCOMB
          IF (GOODHEL(IHEL) .OR. NTRY .LT. 10) THEN
             T=UDB_VMMUEMEPG(P1, P2, P3, P4, P5, P6, P7,NHEL(1,IHEL)) 
             SUDB_VMMUEMEPG = SUDB_VMMUEMEPG + T
              IF (T .GT. 0D0 .AND. .NOT. GOODHEL(IHEL)) THEN
                  GOODHEL(IHEL)=.TRUE.
                  WRITE(*,*) IHEL,T/4d0
              ENDIF
          ENDIF
      ENDDO
      SUDB_VMMUEMEPG = SUDB_VMMUEMEPG /  4D0 
      END
       
       
      REAL*8 FUNCTION UDB_VMMUEMEPG(P1, P2, P3, P4, P5, P6, P7,NHEL)
C  
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT IN PHASE SPACE P1,P2,P3,P4,...
C AND HELICITY NHEL(1),NHEL(2),....
C  
C FOR PROCESS : u d~  -> vm mu+ e- e+ g  
C  
      IMPLICIT NONE
      include 'zerowidth.f'
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN,    NEXTERNAL       
      PARAMETER (NGRAPHS= 24,NEIGEN=  1,NEXTERNAL=7)    
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3),P2(0:3),P3(0:3),P4(0:3),P5(0:3),P6(0:3),P7(0:3)             
      INTEGER NHEL(NEXTERNAL)                                                    
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      REAL*8 EIGEN_VAL(NEIGEN), EIGEN_VEC(NGRAPHS,NEIGEN)
      COMPLEX*16 ZTEMP
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W1(6)  , W2(6)  , W3(6)  , W4(6)  , W5(6)        
      COMPLEX*16 W6(6)  , W7(6)  , W8(6)  , W9(6)  , W10(6)       
      COMPLEX*16 W11(6) , W12(6) , W13(6) , W14(6) , W15(6)       
      COMPLEX*16 W16(6) , W17(6) , W18(6) , W19(6) , W20(6)       
      COMPLEX*16 W21(6) , W22(6) , W23(6) , W24(6) , W25(6)       
      COMPLEX*16 W26(6) , W27(6) , W28(6) 
C  
C GLOBAL VARIABLES
C  
      REAL*8         GW, GWWA, GWWZ
      COMMON /COUP1/ GW, GWWA, GWWZ
      REAL*8         GAL(2),GAU(2),GAD(2),GWF(2)
      COMMON /COUP2A/GAL,   GAU,   GAD,   GWF
      REAL*8         GZN(2),GZL(2),GZU(2),GZD(2),G1(2)
      COMMON /COUP2B/GZN,   GZL,   GZU,   GZD,   G1
      REAL*8         GWWH,GZZH,GHHH,GWWHH,GZZHH,GHHHH
      COMMON /COUP3/ GWWH,GZZH,GHHH,GWWHH,GZZHH,GHHHH
      COMPLEX*16     GH(2,12)
      COMMON /COUP4/ GH
      REAL*8         WMASS,WWIDTH,ZMASS,ZWIDTH
      COMMON /VMASS1/WMASS,WWIDTH,ZMASS,ZWIDTH
      REAL*8         AMASS,AWIDTH,HMASS,HWIDTH
      COMMON /VMASS2/AMASS,AWIDTH,HMASS,HWIDTH
      REAL*8           GG(2), G
      COMMON /COUPQCD/ GG,    G
      REAL*8            FMASS(12), FWIDTH(12)
      COMMON /FERMIONS/ FMASS,     FWIDTH
C  
C COLOR DATA
C  
      DATA EIGEN_VAL(1  )/       1.0666666666666664E+01 /                  
      DATA EIGEN_VEC(1  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(2  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(3  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(4  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(5  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(6  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(7  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(8  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(9  ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(10 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(11 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(12 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(13 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(14 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(15 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(16 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(17 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(18 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(19 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(20 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(21 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(22 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(23 ,1  )/  -2.0412414523193154E-01 /                  
      DATA EIGEN_VEC(24 ,1  )/  -2.0412414523193154E-01 /                  
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P1  ,FMASS(3  ),NHEL(1  ), 1,W1  )                       
      CALL OXXXXX(P2  ,FMASS(4  ),NHEL(2  ),-1,W2  )                       
      CALL OXXXXX(P3  ,FMASS(6  ),NHEL(3  ), 1,W3  )                       
      CALL IXXXXX(P4  ,FMASS(5  ),NHEL(4  ),-1,W4  )                       
      CALL OXXXXX(P5  ,FMASS(1  ),NHEL(5  ), 1,W5  )                       
      CALL IXXXXX(P6  ,FMASS(1  ),NHEL(6  ),-1,W6  )                       
      CALL VXXXXX(P7  , ZERO,NHEL(7  ), 1,W7  )                            
      CALL JIOXXX(W4  ,W3  ,GWF,WMASS,WWIDTH,W8  )                         
      CALL JIOXXX(W6  ,W5  ,GAL,AMASS,AWIDTH,W9  )                         
      CALL FVIXXX(W1  ,W7  ,GG,FMASS(3  ),FWIDTH(3  ),W10 )                
      CALL FVOXXX(W2  ,W8  ,GWF,FMASS(3  ),FWIDTH(3  ),W11 )               
      CALL IOVXXX(W10 ,W11 ,W9  ,GAU,AMP(1  ))                             
      CALL JIOXXX(W6  ,W5  ,GZL,ZMASS,ZWIDTH,W12 )                         
      CALL IOVXXX(W10 ,W11 ,W12 ,GZU,AMP(2  ))                             
      CALL FVOXXX(W2  ,W7  ,GG,FMASS(4  ),FWIDTH(4  ),W13 )                
      CALL FVOXXX(W13 ,W8  ,GWF,FMASS(3  ),FWIDTH(3  ),W14 )               
      CALL IOVXXX(W1  ,W14 ,W9  ,GAU,AMP(3  ))                             
      CALL IOVXXX(W1  ,W14 ,W12 ,GZU,AMP(4  ))                             
      CALL FVIXXX(W1  ,W9  ,GAU,FMASS(3  ),FWIDTH(3  ),W15 )               
      CALL IOVXXX(W15 ,W11 ,W7  ,GG,AMP(5  ))                              
      CALL FVIXXX(W1  ,W12 ,GZU,FMASS(3  ),FWIDTH(3  ),W16 )               
      CALL IOVXXX(W16 ,W11 ,W7  ,GG,AMP(6  ))                              
      CALL FVIXXX(W10 ,W8  ,GWF,FMASS(4  ),FWIDTH(4  ),W17 )               
      CALL IOVXXX(W17 ,W2  ,W9  ,GAD,AMP(7  ))                             
      CALL IOVXXX(W17 ,W2  ,W12 ,GZD,AMP(8  ))                             
      CALL FVIXXX(W1  ,W8  ,GWF,FMASS(4  ),FWIDTH(4  ),W18 )               
      CALL IOVXXX(W18 ,W13 ,W9  ,GAD,AMP(9  ))                             
      CALL IOVXXX(W18 ,W13 ,W12 ,GZD,AMP(10 ))                             
      CALL FVOXXX(W2  ,W9  ,GAD,FMASS(4  ),FWIDTH(4  ),W19 )               
      CALL IOVXXX(W18 ,W19 ,W7  ,GG,AMP(11 ))                              
      CALL FVOXXX(W2  ,W12 ,GZD,FMASS(4  ),FWIDTH(4  ),W20 )               
      CALL IOVXXX(W18 ,W20 ,W7  ,GG,AMP(12 ))                              
      CALL JIOXXX(W10 ,W2  ,GWF,WMASS,WWIDTH,W21 )                         
      CALL FVIXXX(W4  ,W21 ,GWF,FMASS(6  ),FWIDTH(6  ),W22 )               
      CALL IOVXXX(W22 ,W3  ,W12 ,GZN,AMP(13 ))                             
      CALL JIOXXX(W1  ,W13 ,GWF,WMASS,WWIDTH,W23 )                         
      CALL FVIXXX(W4  ,W23 ,GWF,FMASS(6  ),FWIDTH(6  ),W24 )               
      CALL IOVXXX(W24 ,W3  ,W12 ,GZN,AMP(14 ))                             
      CALL FVOXXX(W3  ,W21 ,GWF,FMASS(5  ),FWIDTH(5  ),W25 )               
      CALL IOVXXX(W4  ,W25 ,W9  ,GAL,AMP(15 ))                             
      CALL IOVXXX(W4  ,W25 ,W12 ,GZL,AMP(16 ))                             
      CALL FVOXXX(W3  ,W23 ,GWF,FMASS(5  ),FWIDTH(5  ),W26 )               
      CALL IOVXXX(W4  ,W26 ,W9  ,GAL,AMP(17 ))                             
      CALL IOVXXX(W4  ,W26 ,W12 ,GZL,AMP(18 ))                             
      CALL VVVXXX(W21 ,W8  ,W9  ,GWWA,AMP(19 ))                            
      CALL VVVXXX(W21 ,W8  ,W12 ,GWWZ,AMP(20 ))                            
      CALL VVVXXX(W23 ,W8  ,W9  ,GWWA,AMP(21 ))                            
      CALL VVVXXX(W23 ,W8  ,W12 ,GWWZ,AMP(22 ))                            
      CALL FVOXXX(W5  ,W8  ,GWF,FMASS(2  ),FWIDTH(2  ),W27 )               
      CALL JIOXXX(W6  ,W27 ,GWF,WMASS,WWIDTH,W28 )                         
      CALL IOVXXX(W10 ,W2  ,W28 ,GWF,AMP(23 ))                             
      CALL IOVXXX(W1  ,W13 ,W28 ,GWF,AMP(24 ))                             
      UDB_VMMUEMEPG = 0.D0 
      DO I = 1, NEIGEN
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NGRAPHS
              if ((zerowidth) .and. (((j .gt.12) .and. (j .lt.19))
     .              .or. (j .gt. 22))) then
              continue
              else
              ZTEMP = ZTEMP + EIGEN_VEC(J,I)*AMP(J)
              endif
          ENDDO
          UDB_VMMUEMEPG =UDB_VMMUEMEPG+ZTEMP*EIGEN_VAL(I)*CONJG(ZTEMP) 
      ENDDO
C      CALL GAUGECHECK(AMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NGRAPHS,NEIGEN)
      END
