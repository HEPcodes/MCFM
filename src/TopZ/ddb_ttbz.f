      REAL*8 FUNCTION SDDB_TTBZ(P1, P2, P3, P4, P5)
C  
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P1,P2,P3,P4,...
C  
C FOR PROCESS : d d~  -> t t~ z  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NEXTERNAL,   NCOMB                     
      PARAMETER (NEXTERNAL=5, NCOMB= 48)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3),P2(0:3),P3(0:3),P4(0:3),P5(0:3)                             
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY                                         
      REAL*8 T
      REAL*8 DDB_TTBZ                                                            
      INTEGER IHEL
      LOGICAL GOODHEL(NCOMB)
      DATA GOODHEL/NCOMB*.FALSE./
      DATA NTRY/0/
      DATA (NHEL(IHEL,  1),IHEL=1,5) / -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL,  2),IHEL=1,5) / -1, -1, -1, -1,  0/
      DATA (NHEL(IHEL,  3),IHEL=1,5) / -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL,  4),IHEL=1,5) / -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL,  5),IHEL=1,5) / -1, -1, -1,  1,  0/
      DATA (NHEL(IHEL,  6),IHEL=1,5) / -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL,  7),IHEL=1,5) / -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL,  8),IHEL=1,5) / -1, -1,  1, -1,  0/
      DATA (NHEL(IHEL,  9),IHEL=1,5) / -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 10),IHEL=1,5) / -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 11),IHEL=1,5) / -1, -1,  1,  1,  0/
      DATA (NHEL(IHEL, 12),IHEL=1,5) / -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 13),IHEL=1,5) / -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 14),IHEL=1,5) / -1,  1, -1, -1,  0/
      DATA (NHEL(IHEL, 15),IHEL=1,5) / -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 16),IHEL=1,5) / -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 17),IHEL=1,5) / -1,  1, -1,  1,  0/
      DATA (NHEL(IHEL, 18),IHEL=1,5) / -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 19),IHEL=1,5) / -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 20),IHEL=1,5) / -1,  1,  1, -1,  0/
      DATA (NHEL(IHEL, 21),IHEL=1,5) / -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 22),IHEL=1,5) / -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 23),IHEL=1,5) / -1,  1,  1,  1,  0/
      DATA (NHEL(IHEL, 24),IHEL=1,5) / -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 25),IHEL=1,5) /  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 26),IHEL=1,5) /  1, -1, -1, -1,  0/
      DATA (NHEL(IHEL, 27),IHEL=1,5) /  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 28),IHEL=1,5) /  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 29),IHEL=1,5) /  1, -1, -1,  1,  0/
      DATA (NHEL(IHEL, 30),IHEL=1,5) /  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 31),IHEL=1,5) /  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 32),IHEL=1,5) /  1, -1,  1, -1,  0/
      DATA (NHEL(IHEL, 33),IHEL=1,5) /  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 34),IHEL=1,5) /  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 35),IHEL=1,5) /  1, -1,  1,  1,  0/
      DATA (NHEL(IHEL, 36),IHEL=1,5) /  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 37),IHEL=1,5) /  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 38),IHEL=1,5) /  1,  1, -1, -1,  0/
      DATA (NHEL(IHEL, 39),IHEL=1,5) /  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 40),IHEL=1,5) /  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 41),IHEL=1,5) /  1,  1, -1,  1,  0/
      DATA (NHEL(IHEL, 42),IHEL=1,5) /  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 43),IHEL=1,5) /  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 44),IHEL=1,5) /  1,  1,  1, -1,  0/
      DATA (NHEL(IHEL, 45),IHEL=1,5) /  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 46),IHEL=1,5) /  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 47),IHEL=1,5) /  1,  1,  1,  1,  0/
      DATA (NHEL(IHEL, 48),IHEL=1,5) /  1,  1,  1,  1,  1/
C ----------
C BEGIN CODE
C ----------
      SDDB_TTBZ = 0d0
      NTRY=NTRY+1
      DO IHEL=1,NCOMB
          IF (GOODHEL(IHEL) .OR. NTRY .LT. 10) THEN
             T=DDB_TTBZ(P1, P2, P3, P4, P5,NHEL(1,IHEL)) 
             SDDB_TTBZ = SDDB_TTBZ + T
              IF (T .GT. 0D0 .AND. .NOT. GOODHEL(IHEL)) THEN
                  GOODHEL(IHEL)=.TRUE.
                  WRITE(*,*) IHEL,T
              ENDIF
          ENDIF
      ENDDO
      SDDB_TTBZ = SDDB_TTBZ /  4D0 
      END
       
       
      REAL*8 FUNCTION DDB_TTBZ(P1, P2, P3, P4, P5,NHEL)
C  
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT IN PHASE SPACE P1,P2,P3,P4,...
C AND HELICITY NHEL(1),NHEL(2),....
C  
C FOR PROCESS : d d~  -> t t~ z  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN,    NEXTERNAL       
      PARAMETER (NGRAPHS=  4,NEIGEN=  1,NEXTERNAL=5)    
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3),P2(0:3),P3(0:3),P4(0:3),P5(0:3)                             
      INTEGER NHEL(NEXTERNAL)                                                    
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      REAL*8 EIGEN_VAL(NEIGEN), EIGEN_VEC(NGRAPHS,NEIGEN)
      COMPLEX*16 ZTEMP
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W1(6)  , W2(6)  , W3(6)  , W4(6)  , W5(6)        
      COMPLEX*16 W6(6)  , W7(6)  , W8(6)  , W9(6)  , W10(6)       
      COMPLEX*16 W11(6) 
C  
C GLOBAL VARIABLES
C  
      REAL*8         GW, GWWA, GWWZ
      COMMON /COUP1/ GW, GWWA, GWWZ
      REAL*8         GAL(2),GAU(2),GAD(2),GWF(2)
      COMMON /COUP2A/GAL,   GAU,   GAD,   GWF
      REAL*8         GZN(2),GZL(2),GZU(2),GZD(2),G1(2)
      COMMON /COUP2B/GZN,   GZL,   GZU,   GZD,   G1
      REAL*8         GWWH,GZZH,GHHH,GWWHH,GZZHH,GHHHH
      COMMON /COUP3/ GWWH,GZZH,GHHH,GWWHH,GZZHH,GHHHH
      COMPLEX*16     GH(2,12)
      COMMON /COUP4/ GH
      REAL*8         WMASS,WWIDTH,ZMASS,ZWIDTH
      COMMON /VMASS1/WMASS,WWIDTH,ZMASS,ZWIDTH
      REAL*8         AMASS,AWIDTH,HMASS,HWIDTH
      COMMON /VMASS2/AMASS,AWIDTH,HMASS,HWIDTH
      REAL*8           GG(2), G
      COMMON /COUPQCD/ GG,    G
      REAL*8            FMASS(12), FWIDTH(12)
      COMMON /FERMIONS/ FMASS,     FWIDTH
C  
C COLOR DATA
C  
      DATA EIGEN_VAL(1  )/       8.8888888888888884E-01 /                  
      DATA EIGEN_VEC(1  ,1  )/  -5.0000000000000000E-01 /                  
      DATA EIGEN_VEC(2  ,1  )/  -5.0000000000000000E-01 /                  
      DATA EIGEN_VEC(3  ,1  )/  -5.0000000000000000E-01 /                  
      DATA EIGEN_VEC(4  ,1  )/  -5.0000000000000000E-01 /                  
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P1  ,FMASS(4  ),NHEL(1  ), 1,W1  )                       
      CALL OXXXXX(P2  ,FMASS(4  ),NHEL(2  ),-1,W2  )                       
      CALL OXXXXX(P3  ,FMASS(11 ),NHEL(3  ), 1,W3  )                       
      CALL IXXXXX(P4  ,FMASS(11 ),NHEL(4  ),-1,W4  )                       
      CALL VXXXXX(P5  ,ZMASS,NHEL(5  ), 1,W5  )                            
      CALL JIOXXX(W4  ,W3  ,GG,ZERO,ZERO,W6  )                             
      CALL FVIXXX(W1  ,W5  ,GZD,FMASS(4  ),FWIDTH(4  ),W7  )               
      CALL IOVXXX(W7  ,W2  ,W6  ,GG,AMP(1  ))                              
      CALL FVOXXX(W2  ,W5  ,GZD,FMASS(4  ),FWIDTH(4  ),W8  )               
      CALL IOVXXX(W1  ,W8  ,W6  ,GG,AMP(2  ))                              
      CALL JIOXXX(W1  ,W2  ,GG,ZERO,ZERO,W9  )                             
      CALL FVIXXX(W4  ,W9  ,GG,FMASS(11 ),FWIDTH(11 ),W10 )                
      CALL IOVXXX(W10 ,W3  ,W5  ,GZU,AMP(3  ))                             
      CALL FVOXXX(W3  ,W9  ,GG,FMASS(11 ),FWIDTH(11 ),W11 )                
      CALL IOVXXX(W4  ,W11 ,W5  ,GZU,AMP(4  ))                             
      DDB_TTBZ = 0.D0 
      DO I = 1, NEIGEN
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NGRAPHS
              ZTEMP = ZTEMP + EIGEN_VEC(J,I)*AMP(J)
          ENDDO
          DDB_TTBZ =DDB_TTBZ+ZTEMP*EIGEN_VAL(I)*CONJG(ZTEMP) 
      ENDDO
C      CALL GAUGECHECK(AMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NGRAPHS,NEIGEN)
      END
